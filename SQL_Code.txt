DROP TABLE futura_info;
DROP TABLE futura;
DROP TABLE customers;
DROP TABLE products;

CREATE TABLE customers (
	id SERIAL,
	name CHARACTER VARYING(100) NOT NULL,
	adress CHARACTER VARYING(100) NOT NULL,
	phone CHARACTER VARYING(12) NOT NULL,
	PRIMARY KEY(id),
	UNIQUE(name)
);

CREATE TABLE products (
	id SERIAL,
	name CHARACTER VARYING(100) NOT NULL,
	nounce INTEGER NOT NULL,
	PRIMARY KEY(id),
	UNIQUE(name)
);

CREATE TABLE futura (
	id SERIAL,
	id_customer INTEGER NOT NULL,
	date TIMESTAMP NOT NULL,
	payment_type CHARACTER VARYING(20) NOT NULL,
	prepayment BOOLEAN NOT NULL,
	sent BOOLEAN NOT NULL,
	total_sum MONEY,
	PRIMARY KEY(id),
	FOREIGN KEY (id_customer) REFERENCES customers (id) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE futura_info (
	id SERIAL,
	id_futura INTEGER NOT NULL,
	id_product INTEGER NOT NULL,
	quantity INTEGER NOT NULL,
	price MONEY,
	PRIMARY KEY(id),
	FOREIGN KEY (id_futura) REFERENCES futura (id) ON DELETE CASCADE ON UPDATE CASCADE,
	FOREIGN KEY (id_product) REFERENCES products (id) ON DELETE CASCADE ON UPDATE CASCADE
);

INSERT INTO products (name, nounce) VALUES ('sprite', 10);
SELECT * FROM products;

INSERT INTO customers (name, adress, phone) VALUES ('Ivan', 'Ivanovskoe', '898899342');
SELECT * FROM customers;

SELECT * FROM futura;

SELECT * FROM futura_info;

INSERT INTO futura (id_customer, date, payment_type, prepayment, sent, total_sum) VALUES (1, '2023-4-27', TRUE, TRUE, FALSE, 56000);
SELECT f.id, c.name as customer, f.date, f.payment_type, f.prepayment, f.sent, f.total_sum FROM futura f, customers c;

INSERT INTO futura_info (id_futura, id_product, quantity, price) VALUES (1, 1, 120, 56000);
SELECT f.id, f.id_futura, p.name, f.quantity, f.price FROM futura_info f, products p;


CREATE FUNCTION upd_futura() RETURNS TRIGGER AS $upd_futura$
	BEGIN
		UPDATE futura SET total_sum = NEW.quantity * NEW.price
			WHERE id = NEW.id_futura;
			
		RETURN NEW;
	END;
$upd_futura$ LANGUAGE plpgsql;

CREATE TRIGGER upd_futura BEFORE INSERT OR UPDATE ON futura_info 
	FOR EACH ROW EXECUTE PROCEDURE upd_futura();

INSERT INTO futura (id_customer, date, payment_type, prepayment, sent)  VALUES (2, '2023-05-01','Внесение в кассу', true, true);

INSERT INTO futura_info (id_futura, id_product, quantity, price) VALUES (8, 6, 800, 40);
